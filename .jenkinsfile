pipeline {
  agent { label 'docker' }
  options {
    timeout(time: 4, unit: 'HOURS')
  }
  stages {
    stage('Clean/Setup') {
      steps {
        sh 'git submodule update --init --recursive && make clean'
        sh 'make venv'
      }
    }
    stage('Doc') {
      steps {
        sh 'make docs'
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'doc/build', reportFiles: 'index.html', reportName: 'Sphinx Docs'])
      }
    }
    stage('Test/Build/Lint') {
      steps {
        lock ('manubot') {
          sh 'make output/manuscript.md'
        }
        sh 'make all -j 4'
        archiveArtifacts artifacts: 'output/manuscript.pdf, output/*.svg', onlyIfSuccessful: true
        cobertura coberturaReportFile: 'coverage.xml', failUnhealthy: false, failUnstable: false, maxNumberOfBuilds: 0, onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
        recordIssues qualityGates: [[threshold: 90, type: 'TOTAL', unstable: true]], tools: [pyLint(pattern: 'pylint.log')]
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'output', reportFiles: 'manuscript.html', reportName: 'Manuscript'])
      }
    }
  }
  post {
    always {
      junit allowEmptyResults: true, testResults: 'junit.xml'
      cleanWs cleanWhenFailure: false, cleanWhenNotBuilt: false, cleanWhenUnstable: false
    }
  }
}
