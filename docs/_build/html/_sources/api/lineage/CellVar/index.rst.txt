:py:mod:`lineage.CellVar`
=========================

.. py:module:: lineage.CellVar

.. autoapi-nested-parse::

   This file contains the class for CellVar which holds the state and observation information in the hidden and observed trees respectively. 



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   lineage.CellVar.CellVar
   lineage.CellVar.Time



Functions
~~~~~~~~~

.. autoapisummary::

   lineage.CellVar.tree_recursion
   lineage.CellVar.get_subtrees
   lineage.CellVar.find_two_subtrees



.. py:class:: CellVar(parent, gen, state = None, barcode = None, left=None, right=None)

   Cell class.

   .. py:method:: divide(self, T)

      Member function that performs division of a cell.
      Equivalent to adding another timestep in a Markov process.


   .. py:method:: isLeafBecauseTerminal(self)

      Returns true when a cell is a leaf with no children.
      These are cells at the end of the tree.


   .. py:method:: isLeafBecauseDaughtersAreNotObserved(self)

      Returns true when a cell is a leaf because its children are unobserved
      but it itself is observed.


   .. py:method:: isLeaf(self)

      Returns true when a cell is a leaf defined by the two conditions that determine
      whether a cell is a leaf. A cell only has to satisfy one of the conditions
      (an or statement) for it to be a leaf.


   .. py:method:: isRootParent(self)

      Returns true if this cell is the first cell in a lineage.


   .. py:method:: get_sister(self)

      Member function that gets the sister of the current cell.


   .. py:method:: get_root_cell(self)

      Get the first cell in the lineage to which this cell belongs.


   .. py:method:: get_daughters(self)

      Get the left and right daughters of a cell if they exist.



.. py:function:: tree_recursion(cell, subtree)

   A recursive helper function that traverses upwards from the leaf to the root.


.. py:function:: get_subtrees(node, lineage)

   Given one cell, return the subtree of that cell,
   and return all the tree other than that subtree.


.. py:function:: find_two_subtrees(cell, lineage)

   Gets the left and right subtrees from a cell.


.. py:class:: Time

   Class that stores all the time related observations in a neater format.
   This assists in pruning based on experimental time and obtaining
   attributes of the lineage as a whole like the average growth rate.

   .. py:attribute:: startT
      :annotation: :float

      

   .. py:attribute:: endT
      :annotation: :float

      

   .. py:attribute:: transition_time
      :annotation: :float = 0.0

      


